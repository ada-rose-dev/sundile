'''
watch-headers.py
This script watches the current Systems and Components header files and recompiles All-Components.h and All-Systems.h on change.
'''

#-- Includes
from os import listdir
from os.path import isfile, join
from time import sleep

#-- Define Functions
def readFiles():
    path = './src/headers/components/'
    return  [f for f in listdir(path) if (isfile(join(path, f)) and f.endswith(".h"))]

def write(files, filename, isNew): #TODO
    if (isNew):
        print("Adding",filename)
    else:
        if (filename):
            print("Removing", filename)
        else:
            print("Overriding AllComponents.h")
    
    fobj = open('./src/headers/sundile/AllComponents.h', 'w')
    fobj.writelines([
        "//-- \n",
        "//-- AllComponents.h\n",
        "//-- (automatically generated by watch-headers.py)\n\n"
    ])
    for file in files:
        fobj.write("#include \"../components/"+file+"\"\n")

#-- Main Loop
run = True
sleeptime = 0.5
files_prev = readFiles()
write(files_prev, "", False)
while (run):
    files = readFiles()

    if files != files_prev:
        done = False
        for file in files_prev:
            count_prev = files_prev.count(file)
            count = files.count(file)
            if (count_prev != count):
                write(files, file, False)
                done = True
                break
        if (not done):
            for file in files:
                count_prev = files_prev.count(file)
                count = files.count(file)
                if (count_prev != count):
                    write(files, file, True)
                    break




    files_prev = files
    sleep(sleeptime)